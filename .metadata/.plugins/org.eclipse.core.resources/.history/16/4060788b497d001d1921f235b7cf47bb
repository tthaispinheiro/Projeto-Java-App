package appstorefactoryFree_Premium;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;

public class App_Pago extends App {

	private double preco;
	private String conteudosExclusivos;

	public App_Pago() { // CONSTRUTOR VAZIO
		super();
	}

	public App_Pago(double preco, String conteudosExclusivos) { // CONSTRUTOR CHEIO
		super();
		this.preco = preco;
		this.conteudosExclusivos = conteudosExclusivos;
	}

	public App_Pago(String nomeApp, String categoria, double valor, double versao, String notasDaVersao,
			String politicaDePrivacidade, String emailSuporte, int publicoAlvo, String permissoes,
			String compatibilidade) {
		super(nomeApp, categoria, versao, notasDaVersao, politicaDePrivacidade, emailSuporte, publicoAlvo, permissoes,
				compatibilidade);
		// CONTRUTOR DO PAI
	}

	// METODOS

	public boolean cadastrarApp(String aplicativos) { // CADASTRAR APP PAGO

		aplicativos = aplicativos + "appPago.txt";

		try {

			FileWriter fw = new FileWriter(aplicativos, true); // ABRINDO ARQUIVO EM MODO ESCRITA
			BufferedWriter bw = new BufferedWriter(fw);

			bw.write(getNomeApp() + "#" + getCategoria() + "#" + getVersao() + "#" + getNotasDaVersao() + "#"
					+ getPoliticaDePrivacidade() + "#" + getEmailSuporte() + "#" + getPublicoAlvo() + "#"
					+ getPermissoes() + "#" + getCompatibilidade() + "#" + preco + "#" + conteudosExclusivos);

			bw.newLine();

			bw.close();
			fw.close();
			return true;

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}

		return false;
	}

	public void exibirAplicativos(String aplicativos) { // EXIBIR APP GRATUITO

		aplicativos = aplicativos + "apppago.txt";
		try {

			FileReader fr = new FileReader(aplicativos);
			BufferedReader br = new BufferedReader(fr);

			while (br.ready()) {

				String linha = br.readLine();

				String vetor[] = linha.split("#");

				System.out
						.println("Nome do Aplicativo: " + vetor[0] + "\n" + "Categoria: " + vetor[1] + "\n" + "Versão: "
								+ vetor[2] + "\n" + "Notas da Versão: " + vetor[3] + "\n" + "Política de Privacidade: "
								+ vetor[4] + "\n" + "E-mail para Suporte: " + vetor[5] + "\n" + "Público Alvo: "
								+ vetor[6] + "\n" + "Permissões: " + vetor[7] + "\n" + "Compatibilidade: " + vetor[8]);

			}

			br.close();
			fr.close();

		} catch (Exception e) {
			e.printStackTrace();

		}

	}

	public boolean excluirApp(String aplicativos, String nomeApp) { // EXCLUIR APP

		aplicativos = aplicativos + "apppago.txt";
		try {

			FileReader fr = new FileReader(aplicativos);
			BufferedReader br = new BufferedReader(fr);

			String temporario = aplicativos.replace(".txt", "temporario.txt");
			FileWriter fw = new FileWriter(temporario);
			BufferedWriter bw = new BufferedWriter(fw);

			while (br.ready()) {

				String linha = br.readLine();
				String vetor[] = linha.split("#");

				if (vetor[0].equalsIgnoreCase(nomeApp)) {

				} else {

					bw.write(linha);
					bw.newLine();
				}

			}
			bw.close();
			fw.close();
			br.close();
			fr.close();
			transferir(temporario, aplicativos);
			return true;

		} catch (Exception e) {
			e.printStackTrace();
		}

		return false;
	}

	public boolean verificarPreco() {   //VERIFICAR PREÇO DO APP

		if (preco >= 400) {

			return true;

		} else {

			return false;
		}

	}
	// GET E SET

	public double getPreco() {
		return preco;
	}

	public void setPreco(double preco) {
		this.preco = preco;
	}

	public String getConteudosExclusivos() {
		return conteudosExclusivos;
	}

	public void setConteudosExclusivos(String conteudosExclusivos) {
		this.conteudosExclusivos = conteudosExclusivos;
	}

}
